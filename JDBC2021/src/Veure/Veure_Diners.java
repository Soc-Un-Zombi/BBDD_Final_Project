package Veure;


import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.StringTokenizer;
import java.util.concurrent.TimeUnit;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Ramon Trilla Urteaga i Joan Francesc Pedro García
 */
public class Veure_Diners extends javax.swing.JDialog {

    /**
     * Creates new form Veure_Usuaris
     */
    Connection con;
    public static Statement stmt = null;
    public static ResultSet rs = null;
    java.awt.Frame pare;
    
    String search_id = "";
    String search_nom = "";
    String search_delicte = "";
    String search_estat = "";
    
    public Veure_Diners(java.awt.Frame parent, Connection c, boolean modal, boolean super_u) {
        super(parent, modal);
        initComponents();
        con = c;
        pare = parent;
        afegir_button.setEnabled(super_u);
        eliminar_button1.setEnabled(super_u);
        update_head();
        try
        {
            Thread.sleep(500);
        }
        catch(InterruptedException ex)
        {
            Thread.currentThread().interrupt();
        }
        //update_valors();
        cerca_base_dades();
        busqueda();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        m_ben = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        m_loss = new javax.swing.JLabel();
        seu_combo = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        m_avg = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        m_max = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        m_min = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        money_bank = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        eliminar_button1 = new javax.swing.JButton();
        afegir_button = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jLabel10 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel5.setText("Estat actual de la seu:");

        jLabel6.setText("Diners en caixa:");

        jLabel9.setText("Moviments amb beneficis:");

        m_ben.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        m_ben.setText("0");

        jLabel11.setText("Moviments amb perdues:");

        m_loss.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        m_loss.setText("0");

        seu_combo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tots" }));
        seu_combo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                seu_comboItemStateChanged(evt);
            }
        });
        seu_combo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seu_comboActionPerformed(evt);
            }
        });

        jLabel13.setText("Mitjana de beneficis per moviment:");

        m_avg.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        m_avg.setText("0");

        jLabel14.setText("$");

        jLabel16.setText("Ingrés màxim:");

        m_max.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        m_max.setText("0");

        jLabel18.setText("$");

        jLabel19.setText("Ingrés mínim:");

        m_min.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        m_min.setText("0");

        jLabel21.setText("$");

        jLabel8.setText("$");

        money_bank.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        money_bank.setText("0");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(seu_combo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(money_bank, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(m_ben, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(m_loss, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(76, 76, 76)
                        .addComponent(m_avg, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(76, 76, 76)
                        .addComponent(m_max, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(76, 76, 76)
                        .addComponent(m_min, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(seu_combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(money_bank)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(m_ben))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(m_loss))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(m_avg)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(m_max)
                    .addComponent(jLabel18))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(m_min)
                    .addComponent(jLabel21))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        eliminar_button1.setText("Eliminar");
        eliminar_button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminar_button1ActionPerformed(evt);
            }
        });

        afegir_button.setText("Afegir");
        afegir_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                afegir_buttonActionPerformed(evt);
            }
        });

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jList1MouseEntered(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jList1MousePressed(evt);
            }
        });
        jList1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jList1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jList1KeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        jLabel10.setText("Resultats:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(eliminar_button1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(afegir_button, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 499, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(eliminar_button1)
                            .addComponent(afegir_button)))
                    .addComponent(jLabel10))
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel1.setText("Buscar moviments:");

        jLabel3.setText("Ingres minim:");

        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
        });

        jTextField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField2KeyReleased(evt);
            }
        });

        jLabel7.setText("Ingres maxim:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2))
                .addContainerGap(210, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(116, Short.MAX_VALUE))
        );

        jButton1.setText("Tancar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addGap(0, 12, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jList1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MousePressed
        /*
        String seleccionat = jList1.getSelectedValue();
        
        System.out.println(seleccionat);
        */
    }//GEN-LAST:event_jList1MousePressed

    private void jList1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseEntered
        
        
    }//GEN-LAST:event_jList1MouseEntered

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
        String seleccionat = jList1.getSelectedValue();
        StringTokenizer st = new StringTokenizer(seleccionat,",");
        String a_buscar = st.nextToken();
        Info.Info_Move h = new Info.Info_Move(pare, a_buscar, true, con);
        h.setVisible(true);
    }//GEN-LAST:event_jList1MouseClicked

    private void jList1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jList1KeyTyped
       
    }//GEN-LAST:event_jList1KeyTyped

    private void jList1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jList1KeyReleased
       
    }//GEN-LAST:event_jList1KeyReleased

    private void afegir_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_afegir_buttonActionPerformed
        Afegir.Afegir_move h = new Afegir.Afegir_move(this,true,con);
        h.setVisible(true);
    }//GEN-LAST:event_afegir_buttonActionPerformed

    private void eliminar_button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminar_button1ActionPerformed
        Eliminar.Eliminar_move h = new Eliminar.Eliminar_move(this, con, true);
        h.setVisible(true);
    }//GEN-LAST:event_eliminar_button1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void seu_comboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seu_comboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_seu_comboActionPerformed

    private void seu_comboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_seu_comboItemStateChanged
        busqueda();
        update_valors();
    }//GEN-LAST:event_seu_comboItemStateChanged

    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased
        busqueda();
        update_valors();
    }//GEN-LAST:event_jTextField1KeyReleased

    private void jTextField2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyReleased
        busqueda();
        update_valors();
    }//GEN-LAST:event_jTextField2KeyReleased

   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton afegir_button;
    private javax.swing.JButton eliminar_button1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JLabel m_avg;
    private javax.swing.JLabel m_ben;
    private javax.swing.JLabel m_loss;
    private javax.swing.JLabel m_max;
    private javax.swing.JLabel m_min;
    private javax.swing.JLabel money_bank;
    private javax.swing.JComboBox<String> seu_combo;
    // End of variables declaration//GEN-END:variables
    
    
    private void busqueda(){
        int hq;
        String ordre_h = "";
        if (seu_combo.getSelectedItem().equals("Tots")){
            ordre_h = "headquarterid BETWEEN 1 AND 99999"; 
        }
        else{
             StringTokenizer st = new StringTokenizer(seu_combo.getSelectedItem().toString(),",");
            hq = Integer.valueOf(st.nextToken());
            ordre_h = "headquarterid= "+hq;
        }
        
        System.out.println(ordre_h);
        String ordre_m = "";
        if (jTextField1.getText().isBlank() && jTextField2.getText().isBlank()){
            ordre_m = "";
        }
        else if (jTextField1.getText().isBlank() && !jTextField2.getText().isBlank()){
            ordre_m = "AND deposit < "+jTextField2.getText();
        }
        else if (!jTextField1.getText().isBlank() && jTextField2.getText().isBlank()){
            ordre_m = "AND deposit > "+jTextField1.getText();
        }
        else{
            ordre_m = " AND deposit BETWEEN "+jTextField1.getText()+" AND "+jTextField2.getText();
        }
        
        String a = "";
        if (ordre_h.isEmpty() && ordre_m.isEmpty()){
           a =  "SELECT * FROM moves";
        }
        else{
            a = "SELECT * FROM moves WHERE "
                +ordre_h
                +ordre_m+
                ";";
        }
        
        System.out.println(a);
        ResultSet result = executeQuery(con, a);            
        loadBranches(result);
    }
    
    public void cerca_base_dades(){
        ResultSet result = executeQuery(con, "SELECT * from moves;");            
        loadBranches(result);
        update_valors();
    }
    
    
    private void loadBranches(ResultSet branches){
        
        DefaultListModel model = new DefaultListModel();
        
        model.clear();
        
        try {
            while (branches.next()) {            
            
                String id = branches.getString(1);
                String money = branches.getString(5);
                String des = branches.getString(3);        
                String data = branches.getString(4);
                String result = id + ", " +money + "$, " + des+", "+data;
                model.addElement(result);                       
               
                                         
               
            }
            
        } catch (SQLException e){
            
             JOptionPane.showMessageDialog(this, e.getMessage(), "Status", JOptionPane.INFORMATION_MESSAGE);
        }
        
        this.jList1.setModel(model);
    }
    
    private ResultSet executeQuery (Connection con, String query){
        
        try {
        
            stmt = con.createStatement();
            
            rs = stmt.executeQuery(query);           
            
            return rs;
        
        } catch (SQLException e){
          
            //JOptionPane.showMessageDialog(this, e.getMessage(), "Status", JOptionPane.INFORMATION_MESSAGE);
            
            return null;
        }
    }
    
    private void update_head(){
        ResultSet res = executeQuery(con, "SELECT headquarterid, headquartername FROM headquarters;");
        updateBranches(res,seu_combo);
    }
    
    
    private void updateBranches(ResultSet rs_o, javax.swing.JComboBox<String> in ){       
        try {
            ResultSetMetaData rsmd = rs_o.getMetaData();
            int columnas = rsmd.getColumnCount();
            while ( rs_o.next() ) {  
                String result = "";
                for (int i = 1; i < columnas; i++){
                    result = result+rs_o.getString(i)+", ";
                }
                result = result+rs_o.getString(columnas);
               in.addItem(result);                        
               
            }  
        } catch (SQLException e){
            
             //JOptionPane.showMessageDialog(this, e.getMessage(), "Status", JOptionPane.INFORMATION_MESSAGE);
        }
    }
    
    private void update_valors(){
        if (!seu_combo.getSelectedItem().equals("Tots")){
            StringTokenizer st = new StringTokenizer(seu_combo.getSelectedItem().toString(),",");
            int id = Integer.valueOf(st.nextToken());
            System.out.println(id);
            ResultSet res = executeQuery(con, "SELECT SUM (deposit) FROM moves WHERE headquarterid="+id+";");
            try{
                res.next();
                money_bank.setText(res.getString(1));
            }catch (SQLException e){}
            res = executeQuery(con, "SELECT COUNT (deposit) FROM moves WHERE deposit > 0 AND headquarterid="+id+";");
            try{
                res.next();
                m_ben.setText(res.getString(1));
            }catch (SQLException e){}
            res = executeQuery(con, "SELECT COUNT (deposit) FROM moves WHERE deposit < 0 AND headquarterid="+id+";");
            try{
                res.next();
                m_loss.setText(res.getString(1));
            }catch (SQLException e){}
            res = executeQuery(con, "SELECT AVG (deposit) FROM moves WHERE headquarterid="+id+";");
            try{
                res.next();
                m_avg.setText(res.getString(1));
            }catch (SQLException e){}
            res = executeQuery(con, "SELECT MAX (deposit) FROM moves WHERE headquarterid="+id+";");
            try{
                res.next();
                m_max.setText(res.getString(1));
            }catch (SQLException e){}
            res = executeQuery(con, "SELECT MIN (deposit) FROM moves WHERE headquarterid="+id+";");
            try{
                res.next();
                m_min.setText(res.getString(1));
            }catch (SQLException e){}
        }
        else{
            ResultSet res = executeQuery(con, "SELECT SUM (deposit) FROM moves;");
            try{
                res.next();
                money_bank.setText(res.getString(1));
            }catch (SQLException e){}
            res = executeQuery(con, "SELECT COUNT (deposit) FROM moves WHERE deposit > 0;");
            try{
                res.next();
                m_ben.setText(res.getString(1));
            }catch (SQLException e){}
            res = executeQuery(con, "SELECT COUNT (deposit) FROM moves WHERE deposit < 0;");
            try{
                res.next();
                m_loss.setText(res.getString(1));
            }catch (SQLException e){}
            res = executeQuery(con, "SELECT AVG (deposit) FROM moves;");
            try{
                res.next();
                m_avg.setText(res.getString(1));
            }catch (SQLException e){}
            res = executeQuery(con, "SELECT MAX (deposit) FROM moves;");
            try{
                res.next();
                m_max.setText(res.getString(1));
            }catch (SQLException e){}
            res = executeQuery(con, "SELECT MIN (deposit) FROM moves;");
            try{
                res.next();
                m_min.setText(res.getString(1));
            }catch (SQLException e){}
        }
        
    }
    
    
    
    
}   
